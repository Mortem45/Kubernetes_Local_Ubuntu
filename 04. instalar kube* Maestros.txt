********** Master01 192.168.1.100 ********
# curl -L 'https://github.com/kubernetes/kubernetes/releases/download/v1.4.9/kubernetes.tar.gz' -O kubernetes.tar.gz 
# tar xvf kubernetes.tar.gz && cd kubernetes 
# tar xf ./server/kubernetes-server-linux-amd64.tar.gz -C /opt/ 
# cat <<EOF | tee /etc/systemd/system/kube-apiserver.service

        [Unit]
        Description=Kubernetes API Server
        Documentation=https://github.com/kubernetes/kubernetes
        After=network.target

        [Service]
        User=root
        ExecStart=/opt/kubernetes/server/bin/kube-apiserver \
        --insecure-bind-address=127.0.0.1 \
        --insecure-port=8080 \
        --etcd-servers=http://192.168.1.100:2379,http://192.168.1.101:2379,http://192.168.1.69:2379 \
        --logtostderr=true \
        --allow-privileged=false \
        --service-cluster-ip-range=192.168.100.0/24 \
        --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,SecurityContextDeny,ResourceQuota \
        --service-node-port-range=30000-32767 \
        --advertise-address=192.168.1.105 \
        --client-ca-file=/srv/kubernetes/ca.crt \
        --tls-cert-file=/srv/kubernetes/server.crt \
        --tls-private-key-file=/srv/kubernetes/server.key
        Restart=on-failure
        Type=notify
        LimitNOFILE=65536

        [Install]
        WantedBy=multi-user.target

# cat <<EOF | tee /etc/systemd/system/kube-controller-manager.service
        [Unit]
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/kubernetes/kubernetes

        [Service]
        User=root
        ExecStart=/opt/kubernetes/server/bin/kube-controller-manager \
        --master=127.0.0.1:8080 \
        --root-ca-file=/srv/kubernetes/ca.crt \
        --service-account-private-key-file=/srv/kubernetes/server.key \
        --logtostderr=true
        Restart=on-failure
        LimitNOFILE=65536

        [Install]
        WantedBy=multi-user.target

# cat <<EOF | tee  /etc/systemd/system/kube-scheduler.service

        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/kubernetes/kubernetes

        [Service]
        User=root
        ExecStart=/opt/kubernetes/server/bin/kube-scheduler \
        --logtostderr=true \
        --master=127.0.0.1:8080
        Restart=on-failure
        LimitNOFILE=65536

        [Install]
        WantedBy=multi-user.target

# systemctl daemon-reload
# for name in kube-apiserver kube-controller-manager kube-scheduler; do 
  systemctl enable $name
  systemctl start $name
  done

# systemctl status kube-apiserver
# systemctl status kube-controller-manager
# systemctl status kube-scheduler

----------------------------------------------------------------------------------------------

************ Master02 192.168.1.101 ************

# curl -L 'https://github.com/kubernetes/kubernetes/releases/download/v1.4.9/kubernetes.tar.gz' -O kubernetes.tar.gz 
# tar xvf Â kubernetes.tar.gz && cd kubernetes 
# tar xf ./server/kubernetes-server-linux-amd64.tar.gz -C /opt/ 
# cat <<EOF | tee /etc/systemd/system/kube-apiserver.service

        [Unit]
        Description=Kubernetes API Server
        Documentation=https://github.com/kubernetes/kubernetes
        After=network.target

        [Service]
        User=root
        ExecStart=/opt/kubernetes/server/bin/kube-apiserver \
        --insecure-bind-address=127.0.0.1 \
        --insecure-port=8080 \
        --etcd-servers=http://192.168.1.100:2379,http://192.168.1.101:2379,http://192.168.1.69:2379 \
        --logtostderr=true \
        --allow-privileged=false \
        --service-cluster-ip-range=192.168.100.0/24 \
        --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,SecurityContextDeny,ResourceQuota \
        --service-node-port-range=30000-32767 \
        --advertise-address=192.168.1.105 \
        --client-ca-file=/srv/kubernetes/ca.crt \
        --tls-cert-file=/srv/kubernetes/server.crt \
        --tls-private-key-file=/srv/kubernetes/server.key
        Restart=on-failure
        Type=notify
        LimitNOFILE=65536

        [Install]
        WantedBy=multi-user.target

# cat <<EOF | tee /etc/systemd/system/kube-controller-manager.service
        [Unit]
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/kubernetes/kubernetes

        [Service]
        User=root
        ExecStart=/opt/kubernetes/server/bin/kube-controller-manager \
        --master=127.0.0.1:8080 \
        --root-ca-file=/srv/kubernetes/ca.crt \
        --service-account-private-key-file=/srv/kubernetes/server.key \
        --logtostderr=true
        Restart=on-failure
        LimitNOFILE=65536

        [Install]
        WantedBy=multi-user.target

# cat <<EOF | tee /etc/systemd/system/kube-scheduler.service

        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/kubernetes/kubernetes

        [Service]
        User=root
        ExecStart=/opt/kubernetes/server/bin/kube-scheduler \
        --logtostderr=true \
        --master=127.0.0.1:8080
        Restart=on-failure
        LimitNOFILE=65536

        [Install]
        WantedBy=multi-user.target

# systemctl daemon-reload
# for name in kube-apiserver kube-controller-manager kube-scheduler; do 
  systemctl enable $name
  systemctl start $name
  done 
  
# systemctl status kube-apiserver
# systemctl status kube-controller-manager
# systemctl status kube-scheduler

